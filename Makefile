# Makefile - –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è

.PHONY: help
help: ## –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É
	@echo "Kubernetes + Airflow + Monitoring Stack"
	@echo ""
	@echo "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
	@echo ""
	@grep -E '^[a-zA-Z_-]+:.*?## .*$$' $(MAKEFILE_LIST) | sort | awk 'BEGIN {FS = ":.*?## "}; {printf "\033[36m%-30s\033[0m %s\n", $$1, $$2}'
	@echo ""
	@echo "–ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:"
	@echo "  make setup              # –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Å–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã"
	@echo "  make deploy             # –†–∞–∑–≤–µ—Ä–Ω—É—Ç—å –≤—Å—é —Å–∏—Å—Ç–µ–º—É"
	@echo "  make status             # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å"
	@echo "  make destroy            # –£–¥–∞–ª–∏—Ç—å –≤—Å—ë"

# ==================== SETUP ====================

.PHONY: setup
setup: setup-tools setup-env ## –ü–æ–ª–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è

.PHONY: setup-tools
setup-tools: ## –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã
	@scripts/setup/install-prerequisites.sh
	@scripts/setup/install-terraform.sh
	@scripts/setup/install-ansible.sh
	@scripts/setup/install-k8s-tools.sh
	@scripts/setup/install-yc-cli.sh

.PHONY: setup-env
setup-env: ## –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –æ–∫—Ä—É–∂–µ–Ω–∏–µ
	@scripts/setup/configure-environment.sh

# ==================== INFRASTRUCTURE ====================

.PHONY: infrastructure
infrastructure: infra-init infra-apply ## –°–æ–∑–¥–∞—Ç—å –≤—Å—é –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—É

.PHONY: infra-init
infra-init: ## –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å Terraform
	@scripts/infrastructure/create-s3-bucket.sh
	@scripts/infrastructure/terraform-init.sh

.PHONY: infra-plan
infra-plan: ## –ü–æ–∫–∞–∑–∞—Ç—å –ø–ª–∞–Ω Terraform
	@scripts/infrastructure/terraform-plan.sh

.PHONY: infra-apply
infra-apply: ## –ü—Ä–∏–º–µ–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è Terraform
	@scripts/infrastructure/terraform-apply.sh

.PHONY: infra-destroy
infra-destroy: ## –£–¥–∞–ª–∏—Ç—å –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—É Terraform
	@scripts/infrastructure/terraform-destroy.sh

.PHONY: infra-output
infra-output: ## –ü–æ–∫–∞–∑–∞—Ç—å outputs Terraform
	@scripts/infrastructure/terraform-output.sh

# ==================== KUBERNETES ====================

.PHONY: kubernetes
kubernetes: k8s-install k8s-config ## –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∏ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å Kubernetes

.PHONY: k8s-install
k8s-install: ## –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å k3s
	@scripts/kubernetes/install-k3s.sh

.PHONY: k8s-config
k8s-config: ## –ü–æ–ª—É—á–∏—Ç—å kubeconfig
	@scripts/kubernetes/get-kubeconfig.sh

.PHONY: k8s-verify
k8s-verify: ## –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–ª–∞—Å—Ç–µ—Ä
	@export KUBECONFIG=${PWD}/kubeconfig && kubectl get nodes

# ==================== APPLICATIONS ====================

.PHONY: applications
applications: apps-argocd apps-secrets apps-deploy ## –†–∞–∑–≤–µ—Ä–Ω—É—Ç—å –≤—Å–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è

.PHONY: apps-argocd
apps-argocd: ## –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å ArgoCD
	@scripts/kubernetes/install-argocd.sh

.PHONY: apps-secrets
apps-secrets: ## –°–æ–∑–¥–∞—Ç—å —Å–µ–∫—Ä–µ—Ç—ã
	@scripts/kubernetes/create-secrets.sh

.PHONY: apps-deploy
apps-deploy: ## –†–∞–∑–≤–µ—Ä–Ω—É—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è —á–µ—Ä–µ–∑ ArgoCD
	@scripts/kubernetes/deploy-apps.sh

.PHONY: apps-status
apps-status: ## –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π
	@scripts/monitoring/check-apps-status.sh

.PHONY: apps-wait
apps-wait: ## –î–æ–∂–¥–∞—Ç—å—Å—è –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π
	@scripts/kubernetes/wait-for-ready.sh

# ==================== MAIN WORKFLOWS ====================

.PHONY: deploy
deploy: ## üöÄ –†–∞–∑–≤–µ—Ä–Ω—É—Ç—å –≤—Å—é —Å–∏—Å—Ç–µ–º—É
	@scripts/workflows/full-deploy.sh

.PHONY: quick-start
quick-start: ## ‚ö° –ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç —Å —É—Å—Ç–∞–Ω–æ–≤–∫–æ–π –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤
	@scripts/workflows/quick-start.sh

.PHONY: production
production: ## üè≠ Production —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ
	@scripts/workflows/production-deploy.sh

.PHONY: destroy
destroy: ## üí• –£–¥–∞–ª–∏—Ç—å –≤—Å—é –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—É
	@scripts/workflows/destroy-all.sh

# ==================== OPERATIONS ====================

.PHONY: backup
backup: ## üíæ –°–æ–∑–¥–∞—Ç—å backup –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π
	@scripts/operations/backup-config.sh

.PHONY: restore
restore: ## üì• –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∏–∑ backup
	@scripts/operations/restore-config.sh

.PHONY: cleanup
cleanup: ## üßπ –û—á–∏—Å—Ç–∏—Ç—å –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ä–µ—Å—É—Ä—Å—ã
	@scripts/operations/cleanup-resources.sh

.PHONY: emergency-cleanup
emergency-cleanup: ## üö® –≠–∫—Å—Ç—Ä–µ–Ω–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ –≤—Å–µ–≥–æ
	@scripts/operations/emergency-cleanup.sh

.PHONY: debug
debug: ## üêõ –°–æ–±—Ä–∞—Ç—å –æ—Ç–ª–∞–¥–æ—á–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
	@scripts/operations/debug-cluster.sh

# ==================== MONITORING ====================

.PHONY: status
status: ## üìä –ü–æ–∫–∞–∑–∞—Ç—å –æ–±—â–∏–π —Å—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã
	@scripts/monitoring/check-cluster-status.sh
	@scripts/monitoring/check-apps-status.sh

.PHONY: health
health: ## üè• –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∑–¥–æ—Ä–æ–≤—å–µ —Å–∏—Å—Ç–µ–º—ã
	@scripts/operations/health-check.sh

.PHONY: metrics
metrics: ## üìà –ü–æ–∫–∞–∑–∞—Ç—å –º–µ—Ç—Ä–∏–∫–∏
	@scripts/monitoring/get-metrics.sh

.PHONY: alerts
alerts: ## üîî –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∞–ª–µ—Ä—Ç—ã
	@scripts/monitoring/test-alerts.sh

# ==================== ACCESS ====================

.PHONY: access-info
access-info: ## üîë –ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –¥–æ—Å—Ç—É–ø–µ
	@scripts/access/print-access-info.sh

.PHONY: passwords
passwords: ## üîê –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –ø–∞—Ä–æ–ª–∏
	@scripts/access/get-passwords.sh

.PHONY: port-forward
port-forward: ## üåê –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è port-forward
	@echo "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
	@echo "  make port-forward-airflow   # Airflow UI –Ω–∞ localhost:8080"
	@echo "  make port-forward-grafana   # Grafana –Ω–∞ localhost:3000"
	@echo "  make port-forward-argocd    # ArgoCD –Ω–∞ localhost:8080"

.PHONY: port-forward-airflow
port-forward-airflow: ## üå¨Ô∏è Port-forward –¥–ª—è Airflow
	@scripts/access/port-forward-airflow.sh

.PHONY: port-forward-grafana
port-forward-grafana: ## üìä Port-forward –¥–ª—è Grafana
	@scripts/access/port-forward-grafana.sh

.PHONY: port-forward-argocd
port-forward-argocd: ## üîÑ Port-forward –¥–ª—è ArgoCD
	@scripts/access/port-forward-argocd.sh

# ==================== DEVELOPMENT ====================

.PHONY: sync-dags
sync-dags: ## üîÑ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞—Ç—å DAGs
	@scripts/development/sync-dags.sh

.PHONY: test-dag
test-dag: ## üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å DAG
	@scripts/development/test-dag.sh $(DAG_ID) $(TASK_ID)

.PHONY: reload-airflow
reload-airflow: ## üîÑ –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å Airflow
	@scripts/development/reload-config.sh

.PHONY: local-dev
local-dev: ## üíª –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –ª–æ–∫–∞–ª—å–Ω—É—é —Ä–∞–∑—Ä–∞–±–æ—Ç–∫—É
	@scripts/development/local-dev-setup.sh

# ==================== VALIDATION ====================

.PHONY: validate
validate: ## ‚úÖ –í–∞–ª–∏–¥–∏—Ä–æ–≤–∞—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
	@echo "–ü—Ä–æ–≤–µ—Ä–∫–∞ Terraform..."
	@cd infrastructure/terraform && terraform fmt -check -recursive
	@cd infrastructure/terraform && terraform validate
	@echo "–ü—Ä–æ–≤–µ—Ä–∫–∞ Kubernetes –º–∞–Ω–∏—Ñ–µ—Å—Ç–æ–≤..."
	@find kubernetes/ -name '*.yaml' -o -name '*.yml' | xargs kubeval --ignore-missing-schemas 2>/dev/null || echo "kubeval –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
	@echo "–ü—Ä–æ–≤–µ—Ä–∫–∞ Python..."
	@python3 -m py_compile airflow/dags/*.py

# ==================== SHORTCUTS ====================

.PHONY: tf-init
tf-init: infra-init ## Alias –¥–ª—è infra-init

.PHONY: tf-plan
tf-plan: infra-plan ## Alias –¥–ª—è infra-plan

.PHONY: tf-apply
tf-apply: infra-apply ## Alias –¥–ª—è infra-apply

.PHONY: tf-destroy
tf-destroy: infra-destroy ## Alias –¥–ª—è infra-destroy

.PHONY: k-get-nodes
k-get-nodes: ## –ü–æ–∫–∞–∑–∞—Ç—å –Ω–æ–¥—ã –∫–ª–∞—Å—Ç–µ—Ä–∞
	@export KUBECONFIG=${PWD}/kubeconfig && kubectl get nodes

.PHONY: k-get-pods
k-get-pods: ## –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –ø–æ–¥—ã
	@export KUBECONFIG=${PWD}/kubeconfig && kubectl get pods --all-namespaces

.PHONY: k-get-apps
k-get-apps: ## –ü–æ–∫–∞–∑–∞—Ç—å ArgoCD –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
	@export KUBECONFIG=${PWD}/kubeconfig && kubectl get applications -n argocd

# ==================== LOGS ====================

.PHONY: logs-airflow
logs-airflow: ## üìú –õ–æ–≥–∏ Airflow
	@export KUBECONFIG=${PWD}/kubeconfig && kubectl logs -n airflow -l component=scheduler --tail=50 -f

.PHONY: logs-argocd
logs-argocd: ## üìú –õ–æ–≥–∏ ArgoCD
	@export KUBECONFIG=${PWD}/kubeconfig && kubectl logs -n argocd -l app.kubernetes.io/name=argocd-server --tail=50 -f

.PHONY: logs-ingress
logs-ingress: ## üìú –õ–æ–≥–∏ Ingress
	@export KUBECONFIG=${PWD}/kubeconfig && kubectl logs -n ingress-nginx -l app.kubernetes.io/component=controller --tail=50 -f