apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: grafana
  namespace: argocd
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: monitoring
  source:
    repoURL: https://grafana.github.io/helm-charts
    targetRevision: 7.3.0
    chart: grafana
    helm:
      valuesObject:
        # Учетные данные
        adminUser: admin
        adminPassword: changeme123

        # Персистентность
        persistence:
          enabled: true
          storageClassName: local-path
          size: 10Gi

        # Сервис
        service:
          type: NodePort
          nodePort: 32300
          port: 80
          targetPort: 3000

        # ВАЖНО: Правильный URL для Prometheus
        datasources:
          datasources.yaml:
            apiVersion: 1
            datasources:
            - name: Prometheus
              type: prometheus
              uid: prometheus-uid
              access: proxy
              url: http://prometheus-prometheus:9090  # Правильный URL!
              isDefault: true
              jsonData:
                timeInterval: 30s
                httpMethod: POST
              editable: true

        # Включаем sidecar для автоматического обнаружения
        sidecar:
          dashboards:
            enabled: true
            label: grafana_dashboard
            labelValue: "1"
            searchNamespace: monitoring
            provider:
              allowUiUpdates: true
          datasources:
            enabled: true
            label: grafana_datasource
            labelValue: "1"
            searchNamespace: monitoring

        # Дашборды по умолчанию
        dashboardProviders:
          dashboardproviders.yaml:
            apiVersion: 1
            providers:
            - name: 'prometheus'
              orgId: 1
              folder: 'Prometheus'
              type: file
              disableDeletion: false
              updateIntervalSeconds: 10
              options:
                path: /var/lib/grafana/dashboards/prometheus

        dashboards:
          prometheus:
            # Prometheus 2.0 Stats
            prometheus-stats:
              gnetId: 2
              revision: 2
              datasource: Prometheus
            # Node Exporter Full
            node-exporter:
              gnetId: 1860
              revision: 29
              datasource: Prometheus
            # Kubernetes Cluster Monitoring
            k8s-cluster:
              gnetId: 7249
              revision: 1
              datasource: Prometheus

        # Ресурсы
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 500m
            memory: 512Mi

        # Переменные окружения
        env:
          GF_EXPLORE_ENABLED: "true"
          GF_PANELS_DISABLE_SANITIZE_HTML: "true"

  destination:
    server: https://kubernetes.default.svc
    namespace: monitoring

  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
    - CreateNamespace=true