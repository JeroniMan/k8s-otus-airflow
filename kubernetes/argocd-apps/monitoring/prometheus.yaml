apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: prometheus
  namespace: argocd
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: monitoring
  source:
    repoURL: https://prometheus-community.github.io/helm-charts
    targetRevision: 56.21.4
    chart: kube-prometheus-stack
    helm:
      values: |
        # Название для избежания конфликтов
        fullnameOverride: prometheus
        
        # Prometheus Operator с правильной конфигурацией admission webhooks
        prometheusOperator:
          enabled: true
          
          # Admission Webhooks включены с правильными настройками
          admissionWebhooks:
            enabled: true
            failurePolicy: Ignore  # Важно! Не блокировать если webhook недоступен
            timeoutSeconds: 10
            
            # Настройки для создания сертификатов
            certManager:
              enabled: false  # Не используем cert-manager
              
            patch:
              enabled: true  # Включаем автоматическое создание сертификатов
              image:
                registry: registry.k8s.io
                repository: ingress-nginx/kube-webhook-certgen
                tag: v20221220-controller-v1.5.1-58-g787ea74b6
                pullPolicy: IfNotPresent
              
              # Ресурсы для job
              resources:
                limits:
                  cpu: 100m
                  memory: 100Mi
                requests:
                  cpu: 10m
                  memory: 50Mi
              
              # Приоритет и настройки
              priorityClassName: ""
              podAnnotations: {}
              nodeSelector: {}
              affinity: {}
              tolerations: []
              
            # Service Account для admission webhook
            createSecretJob:
              securityContext:
                runAsNonRoot: true
                runAsUser: 2000
                seccompProfile:
                  type: RuntimeDefault
            
            patchWebhookJob:
              securityContext:
                runAsNonRoot: true
                runAsUser: 2000
                seccompProfile:
                  type: RuntimeDefault
          
          # Service Account
          serviceAccount:
            create: true
            name: prometheus-operator
          
          # Ресурсы оператора
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
            limits:
              cpu: 200m
              memory: 200Mi
        
        # Остальная конфигурация
        prometheus:
          prometheusSpec:
            retention: 7d
            storageSpec:
              volumeClaimTemplate:
                spec:
                  storageClassName: local-path
                  accessModes: ["ReadWriteOnce"]
                  resources:
                    requests:
                      storage: 10Gi
            resources:
              requests:
                cpu: 200m
                memory: 400Mi
              limits:
                cpu: 500m
                memory: 1Gi
        
        alertmanager:
          enabled: false
        
        grafana:
          enabled: false
        
        # Включаем компоненты мониторинга
        kubeStateMetrics:
          enabled: true
        
        nodeExporter:
          enabled: true
        
        # Отключаем ненужное для k3s
        kubeApiServer:
          enabled: false
        kubelet:
          enabled: true
          serviceMonitor:
            https: false
        kubeControllerManager:
          enabled: false
        coreDns:
          enabled: false
        kubeEtcd:
          enabled: false
        kubeScheduler:
          enabled: false
        kubeProxy:
          enabled: false
        
        defaultRules:
          create: false

  destination:
    server: https://kubernetes.default.svc
    namespace: monitoring

  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
    - CreateNamespace=true
    - ServerSideApply=true
    retry:
      limit: 5
      backoff:
        duration: 5s
        factor: 2
        maxDuration: 3m