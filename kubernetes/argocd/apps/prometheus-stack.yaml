# kubernetes/argocd/apps/prometheus-stack.yaml
# ArgoCD Application для kube-prometheus-stack

apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: prometheus-stack
  namespace: argocd
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: production

  source:
    repoURL: https://prometheus-community.github.io/helm-charts
    targetRevision: 56.6.2
    chart: kube-prometheus-stack
    helm:
      releaseName: prometheus-stack
      # Упрощенная конфигурация для начала
      values: |
        # Устанавливаем CRDs через Helm
        crds:
          enabled: true
          
        # Отключаем компоненты требующие много ресурсов
        prometheus:
          prometheusSpec:
            retention: 7d
            resources:
              requests:
                cpu: 100m
                memory: 512Mi
              limits:
                cpu: 500m
                memory: 1Gi
            # Используем emptyDir вместо PVC
            storageSpec: {}
            
        grafana:
          enabled: true
          adminPassword: changeme123
          persistence:
            enabled: false  # Отключаем для тестирования
          ingress:
            enabled: true
            ingressClassName: nginx
            annotations:
              nginx.ingress.kubernetes.io/rewrite-target: /$2
            path: /grafana(/|$)(.*)
            hosts: []
            
        alertmanager:
          enabled: false  # Отключаем для упрощения
          
        # Минимальные ресурсы
        prometheusOperator:
          resources:
            requests:
              cpu: 50m
              memory: 64Mi
            limits:
              cpu: 200m
              memory: 256Mi
          admissionWebhooks:
            enabled: false  # Отключаем webhooks для упрощения
              
        # Отключаем некоторые компоненты
        kubeStateMetrics:
          enabled: true
        nodeExporter:
          enabled: false
        
        # Отключаем правила для начала
        defaultRules:
          create: false
          
        # Отключаем дополнительные компоненты
        prometheus-node-exporter:
          enabled: false
        kube-state-metrics:
          enabled: true

  destination:
    server: https://kubernetes.default.svc
    namespace: monitoring

  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
    - CreateNamespace=true
    - ServerSideApply=true
    - Replace=true
    retry:
      limit: 5
      backoff:
        duration: 5s
        factor: 2
        maxDuration: 3m

  revisionHistoryLimit: 10